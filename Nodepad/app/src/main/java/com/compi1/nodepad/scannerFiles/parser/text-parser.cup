package com.compi1.nodepad.scannerFiles.parser;

import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.List;

import android.util.Log;

import com.compi1.nodepad.scannerFiles.lexer.TextLexer;
import com.compi1.nodepad.src.text_output.*;

parser code {:

  private List<TextSyntacOutput> data = new ArrayList<>();

  public Parser( TextLexer lex) {
        super(lex);
  }

  public List<TextSyntacOutput> getData(){
        return data;
  }

:}

/*      TERMINALES      */
// Terminales de las cabeceras
terminal  H1, H2, H3, H4, H5, H6;

// Terminales de los tipos de formatos
terminal ITALIC, BOLD, ITALIC_BOLD;

// Terminales de las listas numeradas
terminal INIT_LIST, ITEM_NUM;

// Terminales de las listas no numradas
terminal ITEM_LIST;

// Terminales  de las oraciones
terminal String SENTENCE;


/*      NO TERMINALES   */
// No terminales asociados a texto
non terminal text;
non terminal header;
non terminal parragraph;
non terminal format;
non terminal list;

// No terminales asociados a cabecera
non terminal Float header_mark;

// No terminales asociados a parrafo
non terminal sentences;

// No terminales asociados a formato
non terminal bold;
non terminal italic;
non terminal italic_bold;

// No terminales asociodos a lista
non terminal numbered_list;
non terminal no_numbered_list;

// No terminales asociados a lista numerada
non terminal first_item;
non terminal numbered_items;
non terminal numbered_item;

// No terminales asociados a lista no numerada
non terminal no_numbered_items;
non terminal no_numbered_item;

/*      REGLAS DE PRECEDENCIA   */
precedence right SENTENCE;
precedence right ITEM_LIST;

/*THER GRAMMAR*/

start with text;

text ::= text header
        | header
        | text parragraph
        | parragraph
        | text format
        | format
        | text list
        | list
        ;

header ::= header_mark:size_text SENTENCE:h_body {: data.add( new SizeText(h_body, size_text)); Log.d("LexerDebug", "Se leyo un header"); :}
        ;

header_mark ::= H1 {: RESULT = SizeText.H1; :}
              | H2 {: RESULT = SizeText.H2; :}
              | H3 {: RESULT = SizeText.H3; :}
              | H4 {: RESULT = SizeText.H4; :}
              | H5 {: RESULT = SizeText.H5; :}
              | H6 {: RESULT = SizeText.H6; :}
              ;

parragraph ::= sentences
             ;

sentences ::= sentences SENTENCE
            | SENTENCE
            ;

format ::= bold
         | italic
         | italic_bold
         ;

bold ::= BOLD SENTENCE BOLD
       ;

italic ::= ITALIC SENTENCE ITALIC
         ;

italic_bold ::= ITALIC_BOLD SENTENCE ITALIC_BOLD
              ;

list ::= numbered_list
       | no_numbered_list
       ;

numbered_list ::= first_item numbered_items
                | first_item
                ;

first_item ::= INIT_LIST SENTENCE
             ;

numbered_items ::= numbered_items numbered_item
                 | numbered_item
                 ;

numbered_item ::= ITEM_NUM SENTENCE
                ;

no_numbered_list ::= no_numbered_item no_numbered_items
                   | no_numbered_item
                   ;

no_numbered_items ::= no_numbered_item no_numbered_items
                    | no_numbered_item
                    ;

no_numbered_item ::= ITEM_LIST SENTENCE
                   ;